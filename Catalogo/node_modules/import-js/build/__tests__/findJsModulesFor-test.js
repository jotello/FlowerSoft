"use strict";

var _path = _interopRequireDefault(require("path"));

var _Configuration = _interopRequireDefault(require("../Configuration"));

var _FileUtils = _interopRequireDefault(require("../FileUtils"));

var _JsModule = _interopRequireDefault(require("../JsModule"));

var _ModuleFinder = _interopRequireDefault(require("../ModuleFinder"));

var _findJsModulesFor = _interopRequireWildcard(require("../findJsModulesFor"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

jest.mock('../ModuleFinder');
jest.mock('../FileUtils');
beforeEach(function () {
  _ModuleFinder.default.getForWorkingDirectory.mockImplementation(function () {
    return {
      find: function find() {
        return Promise.resolve([{
          path: './foo.js',
          isDefault: true
        }]);
      }
    };
  });
});
it('returns matching modules', function () {
  return (0, _findJsModulesFor.default)(new _Configuration.default('./bar.js'), 'foo').then(function (jsModules) {
    expect(jsModules.length).toEqual(1);
  });
});
describe('when a matching module is excluded', function () {
  beforeEach(function () {
    _FileUtils.default.__setFile(_path.default.join(process.cwd(), '.importjs.js'), {
      excludes: ['./*.js']
    });
  });
  it('strips it out', function () {
    return (0, _findJsModulesFor.default)(new _Configuration.default('./bar.js'), 'foo').then(function (jsModules) {
      expect(jsModules.length).toEqual(0);
    });
  });
});
describe('when matching to an array of various modules', function () {
  var modules = [new _JsModule.default({
    importPath: './foo/bar',
    variableName: 'bar',
    hasNamedExports: true
  }), new _JsModule.default({
    importPath: './foo/bar',
    variableName: 'bar',
    hasNamedExports: false
  }), new _JsModule.default({
    importPath: './bar',
    variableName: 'bar',
    hasNamedExports: false
  }), new _JsModule.default({
    importPath: './bar',
    variableName: 'Bar',
    hasNamedExports: false
  })];
  it('dedupes and sorts', function () {
    expect((0, _findJsModulesFor.dedupeAndSort)(modules)).toEqual([new _JsModule.default({
      importPath: './bar',
      variableName: 'bar',
      hasNamedExports: false
    }), new _JsModule.default({
      importPath: './foo/bar',
      variableName: 'bar',
      hasNamedExports: false
    }), new _JsModule.default({
      importPath: './foo/bar',
      variableName: 'bar',
      hasNamedExports: true
    })]);
  });
});