"use strict";

var _fs = _interopRequireDefault(require("fs"));

var _FileUtils = _interopRequireDefault(require("../FileUtils"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

jest.mock('fs');
describe('FileUtils', function () {
  afterEach(function () {
    _fs.default.__reset();
  });
  describe('.readJsonFile()', function () {
    it('returns null for files that do not exist', function () {
      expect(_FileUtils.default.readJsonFile('foo.json')).toEqual(null);
    });
    describe('for empty files', function () {
      beforeEach(function () {
        _fs.default.__setFile('foo.json', '');
      });
      it('returns null', function () {
        expect(_FileUtils.default.readJsonFile('foo.json')).toEqual(null);
      });
    });
    describe('for files with valid JSON', function () {
      beforeEach(function () {
        _fs.default.__setFile('foo.json', '{"hi":"mom"}');
      });
      it('returns parsed JSON', function () {
        expect(_FileUtils.default.readJsonFile('foo.json')).toEqual({
          hi: 'mom'
        });
      });
    });
  });
});