"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = parse;
var TYPESCRIPT_FILE_PATH_REGEX = /\.tsx?$/;

function getParserPlugins(absolutePathToFile) {
  var typePlugin = TYPESCRIPT_FILE_PATH_REGEX.test(absolutePathToFile) ? 'typescript' : 'flow';
  return [typePlugin, 'jsx', 'doExpressions', 'objectRestSpread', 'decorators-legacy', 'classProperties', 'classPrivateProperties', 'classPrivateMethods', 'exportExtensions', 'asyncGenerators', 'functionBind', 'functionSent', 'dynamicImport', 'numericSeparator', 'optionalChaining', 'importMeta', 'bigInt', 'optionalCatchBinding', 'throwExpressions', ['pipelineOperator', {
    proposal: 'minimal'
  }], 'nullishCoalescingOperator', 'exportNamespaceFrom', 'exportDefaultFrom'];
}

function parse(fileContent, absolutePathToFile) {
  // For some reason, we can't `import` @babel/parser using an es6 import.
  // eslint-disable-next-line global-require
  var babelParser = require('@babel/parser');

  return babelParser.parse(fileContent, {
    allowImportExportEverywhere: true,
    plugins: getParserPlugins(absolutePathToFile),
    sourceType: 'module'
  });
}