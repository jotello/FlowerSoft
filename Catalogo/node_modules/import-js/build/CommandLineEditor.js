"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var CommandLineEditor =
/*#__PURE__*/
function () {
  function CommandLineEditor(lines) {
    _classCallCheck(this, CommandLineEditor);

    this._lines = lines;
  }

  _createClass(CommandLineEditor, [{
    key: "currentFileContent",
    value: function currentFileContent() {
      return this._lines.join('\n');
    }
  }, {
    key: "get",
    value: function get(index) {
      return this._lines[index];
    }
  }, {
    key: "remove",
    value: function remove(index) {
      this._lines.splice(index, 1);
    }
    /**
     * Insert a line above the specified index
     */

  }, {
    key: "insertBefore",
    value: function insertBefore(index, str) {
      this._lines.splice(index, 0, str);
    }
  }]);

  return CommandLineEditor;
}();

exports.default = CommandLineEditor;